@using System.Security.Claims
@using FirestormSW.SmartGrade.Extensions
@using FirestormSW.SmartGrade.Services
@using FirestormSW.SmartGrade.Utils
@inject LoginService LoginService;

<!DOCTYPE html>

<html lang="en">

<!--begin::Head-->
<head>
    <base href="">
    <meta charset="utf-8"/>
    <title>Metronic Live preview | Keenthemes</title>
    <meta name="description" content="Metronic admin dashboard live demo. Check out all the features of the admin panel. A large number of settings, additional services and widgets."/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>

    <!--begin::Fonts-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700"/>

    <!--end::Fonts-->

    <!--begin::Page Vendors Styles(used by this page)-->
    <link href="~/assets/admin/plugins/custom/fullcalendar/fullcalendar.bundle.css" rel="stylesheet" type="text/css"/>

    <!--end::Page Vendors Styles-->

    <!--begin::Global Theme Styles(used by all pages)-->
    <link href="~/assets/admin/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css"/>
    <link href="~/assets/admin/plugins/custom/prismjs/prismjs.bundle.css" rel="stylesheet" type="text/css"/>
    <link href="~/assets/admin/css/style.bundle.css" rel="stylesheet" type="text/css"/>
    <link href="~/assets/admin/css/custom.css" rel="stylesheet" type="text/css"/>

    <!--end::Global Theme Styles-->

    <!--begin::Layout Themes(used by all pages)-->
    <link href="~/assets/admin/css/themes/layout/header/base/light.css" rel="stylesheet" type="text/css"/>
    <link href="~/assets/admin/css/themes/layout/header/menu/light.css" rel="stylesheet" type="text/css"/>
    <link href="~/assets/admin/css/themes/layout/brand/dark.css" rel="stylesheet" type="text/css"/>
    <link href="~/assets/admin/css/themes/layout/aside/dark.css" rel="stylesheet" type="text/css"/>

    <!--end::Layout Themes-->
    <link rel="shortcut icon" href="~/assets/admin/media/logos/favicon.ico"/>

    <script>
    	let HOST_URL = window.location.origin;
    	let isImpersonated = @Context.User.Identity.IsImpersonated().ToString().ToLower();
    	let userId = @(((ClaimsIdentity)Context.User.Identity).Claims.FirstOrDefault(c => c.Type == UserClaims.UserId)?.Value ?? "-1");
    </script>

    <!--begin::Global Config(global config for global JS scripts)-->
    <script> 
    	let KTAppSettings = {
    		"breakpoints": {
    			"sm": 576,
    			"md": 768,
    			"lg": 992,
    			"xl": 1200,
    			"xxl": 1400
    		},
    		"colors": {
    			"theme": {
    				"base": {
    					"white": "#ffffff",
    					"primary": "#3699FF",
    					"secondary": "#E5EAEE",
    					"success": "#1BC5BD",
    					"info": "#8950FC",
    					"warning": "#FFA800",
    					"danger": "#F64E60",
    					"light": "#E4E6EF",
    					"dark": "#181C32"
    				},
    				"light": {
    					"white": "#ffffff",
    					"primary": "#E1F0FF",
    					"secondary": "#EBEDF3",
    					"success": "#C9F7F5",
    					"info": "#EEE5FF",
    					"warning": "#FFF4DE",
    					"danger": "#FFE2E5",
    					"light": "#F3F6F9",
    					"dark": "#D6D6E0"
    				},
    				"inverse": {
    					"white": "#ffffff",
    					"primary": "#ffffff",
    					"secondary": "#3F4254",
    					"success": "#ffffff",
    					"info": "#ffffff",
    					"warning": "#ffffff",
    					"danger": "#ffffff",
    					"light": "#464E5F",
    					"dark": "#ffffff"
    				}
    			},
    			"gray": {
    				"gray-100": "#F3F6F9",
    				"gray-200": "#EBEDF3",
    				"gray-300": "#E4E6EF",
    				"gray-400": "#D1D3E0",
    				"gray-500": "#B5B5C3",
    				"gray-600": "#7E8299",
    				"gray-700": "#5E6278",
    				"gray-800": "#3F4254",
    				"gray-900": "#181C32"
    			}
    		},
    		"font-family": "Poppins"
    	};
    </script>

    <!--end::Global Config-->

    <!--begin::Global Theme Bundle(used by all pages)-->
    <script src="~/assets/admin/plugins/global/plugins.bundle.js"></script>
    <script src="~/assets/admin/plugins/custom/prismjs/prismjs.bundle.js"></script>
    <script src="~/assets/admin/js/scripts.bundle.js"></script>
    <script src="~/assets/admin/js/plugins/jsrender/jsrender.min.js"></script>

    <!--end::Global Theme Bundle-->
</head>

<!--end::Head-->

<!--begin::Body-->
<body id="kt_body" class="page-loading-enabled page-loading header-fixed aside-enabled aside-fixed aside-minimize-hoverable page-loading">

<partial name="Admin/Partials/PageLoader"/>

<!--begin::Main-->

<partial name="Admin/Partials/HeaderMobile"/>

<div class="d-flex flex-column flex-root">

	<!--begin::Page-->
	<div class="d-flex flex-row flex-column-fluid page">

		<partial name="Admin/Partials/Aside"/>

		<!--begin::Wrapper-->
		<div class="d-flex flex-column flex-row-fluid wrapper" id="kt_wrapper">

			<partial name="Admin/Partials/Header"/>

			<!--begin::Content-->
			<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
				@RenderBody()
			</div>

			<!--end::Content-->
		</div>

		<!--end::Wrapper-->
	</div>

	<!--end::Page-->
</div>

<!--end::Main-->

<partial name="Admin/Partials/Extras/Scrolltop"/>
</body>

<!--begin::Session Timeout-->
<script>
	function getCookie(name) {
		const value = `; ${document.cookie}`;
		const parts = value.split(`; ${name}=`);
		if (parts.length === 2) 
			return parts.pop().split(';').shift();
	}

	let sessionLifespan = (new Date(decodeURIComponent(getCookie("AuthTimeout"))) - new Date());
	let KTSessionTimeoutDemo = function() {
        let initDemo = function() {
            $.sessionTimeout({
                title: "Session Timeout Notification",
                message: "Your session is about to expire.",
                keepAliveUrl: HOST_URL,
                keepAliveMethod: "GET",
                redirUrl: "/Logout",
                logoutUrl: "/Logout",
                warnAfter: sessionLifespan - 10 * 1000,
                redirAfter: sessionLifespan,
                ignoreUserActivity: false,
                countdownMessage: "Redirecting in {timer} seconds.",
                countdownBar: true // TODO Localize buttons, https://github.com/orangehill/bootstrap-session-timeout
            });
        }
    
        return {
            //main function to initiate the module
            init: function() {
                initDemo();
            }
        };
    }();
    
    jQuery(document).ready(function() {
        KTSessionTimeoutDemo.init();
    });
</script>
<!--end::Session Timeout-->

<!--end::Body-->
</html>